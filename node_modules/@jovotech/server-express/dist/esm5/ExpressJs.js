var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Server } from '@jovotech/framework';
var ExpressJs = /** @class */ (function (_super) {
    __extends(ExpressJs, _super);
    function ExpressJs(req, res) {
        var _this = _super.call(this) || this;
        _this.req = req;
        _this.res = res;
        return _this;
    }
    ExpressJs.prototype.fail = function (error) {
        if (!this.res.headersSent) {
            var responseObj = {
                code: 500,
                msg: error.message,
            };
            if (process.env.NODE_ENV === 'production') {
                responseObj.stack = error.stack;
            }
            this.res.status(responseObj.code).json(responseObj);
        }
    };
    ExpressJs.prototype.getQueryParams = function () {
        return this.req.query || {};
    };
    ExpressJs.prototype.getRequestObject = function () {
        return this.req.body;
    };
    ExpressJs.prototype.getNativeRequestHeaders = function () {
        return this.req.headers;
    };
    ExpressJs.prototype.hasWriteFileAccess = function () {
        return true;
    };
    ExpressJs.prototype.setResponse = function (response) {
        var _this = this;
        return new Promise(function (resolve) {
            if (!_this.res.headersSent) {
                _this.res.json(response);
            }
            resolve();
        });
    };
    // eslint-disable-next-line
    ExpressJs.prototype.setResponseHeaders = function (header) {
        var _this = this;
        Object.keys(header).forEach(function (key) {
            _this.res.setHeader(key, header[key]);
        });
    };
    return ExpressJs;
}(Server));
export { ExpressJs };
//# sourceMappingURL=ExpressJs.js.map