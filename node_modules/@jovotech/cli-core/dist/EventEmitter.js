"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventEmitter = void 0;
class EventEmitter {
    constructor() {
        this.events = {};
    }
    listeners(event) {
        return this.events[event] || [];
    }
    addListener(event, listener) {
        if (!this.events[event]) {
            this.events[event] = [];
        }
        this.events[event].push(listener);
        return this;
    }
    on(event, listener) {
        return this.addListener(event, listener);
    }
    removeListener(event, listener) {
        const listeners = this.events[event];
        for (let i = 0; i < listeners.length; i++) {
            if (listeners[i] === listener) {
                listeners.splice(i, 1);
                break;
            }
        }
        return this;
    }
    off(event, listener) {
        return this.removeListener(event, listener);
    }
    /**
     * Calls each listener registered for event, in order of registration and synchronously.
     * @param event - The event.
     * @param args - Possible arguments that get passed to all listener functions.
     */
    async run(event, ...args) {
        const fns = this.listeners(event);
        if (!fns.length) {
            return false;
        }
        while (fns.length) {
            const fn = fns.shift();
            await fn(...args);
        }
        return true;
    }
}
exports.EventEmitter = EventEmitter;
//# sourceMappingURL=EventEmitter.js.map