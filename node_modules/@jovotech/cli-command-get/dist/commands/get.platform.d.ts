import { BuildPlatformEvents } from '@jovotech/cli-command-build';
import { CliArgs, CliFlags, EventEmitter, flags, JovoCli, PluginCommand, PluginContext } from '@jovotech/cli-core';
import GetCommand from '..';
export declare type GetPlatformEvents = 'before.get:platform' | 'get:platform' | 'after.get:platform';
export interface GetPlatformContext extends PluginContext {
    flags: CliFlags<typeof GetPlatform>;
    args: CliArgs<typeof GetPlatform>;
    platforms: string[];
    locales: string[];
    clean: boolean;
}
export declare class GetPlatform extends PluginCommand<BuildPlatformEvents | GetPlatformEvents> {
    static id: string;
    static description: string;
    static examples: string[];
    static availablePlatforms: string[];
    static flags: {
        stage: flags.IOptionFlag<string | undefined>;
        debug: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        locale: flags.IOptionFlag<string[]>;
        'build-reverse': import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        clean: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
    };
    static args: {
        readonly name: "platform";
        readonly description: "Platform to get files from";
        readonly multiple: true;
        readonly options: string[];
    }[];
    static strict: boolean;
    $context: GetPlatformContext;
    static install(cli: JovoCli, plugin: GetCommand, emitter: EventEmitter<GetPlatformEvents>): void;
    install(): void;
    beforeGet(): void;
    run(): Promise<void>;
}
