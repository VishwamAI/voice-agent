var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { IsNotEmpty, IsObject, IsOptional, IsString, TransformMap, ValidateNested, } from '..';
import { Entity } from './Entity';
var QuickReply = /** @class */ (function () {
    function QuickReply() {
    }
    __decorate([
        IsString(),
        IsNotEmpty(),
        __metadata("design:type", String)
    ], QuickReply.prototype, "text", void 0);
    __decorate([
        IsOptional(),
        IsString(),
        IsNotEmpty(),
        __metadata("design:type", String)
    ], QuickReply.prototype, "value", void 0);
    __decorate([
        IsOptional(),
        IsString(),
        IsNotEmpty(),
        __metadata("design:type", String)
    ], QuickReply.prototype, "intent", void 0);
    __decorate([
        IsOptional(),
        IsObject(),
        ValidateNested({ each: true }),
        TransformMap(function () { return Entity; }),
        __metadata("design:type", Object)
    ], QuickReply.prototype, "entities", void 0);
    return QuickReply;
}());
export { QuickReply };
//# sourceMappingURL=QuickReply.js.map