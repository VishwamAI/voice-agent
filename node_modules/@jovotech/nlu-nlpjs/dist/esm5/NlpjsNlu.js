var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { NluPlugin, } from '@jovotech/framework';
import { JovoModelNlpjs } from '@jovotech/model-nlpjs';
import { promises } from 'fs';
import { join } from 'path';
// eslint-disable-next-line @typescript-eslint/no-var-requires
var Nlp = require('@nlpjs/nlp').Nlp;
export var NlpJsEntityType;
(function (NlpJsEntityType) {
    NlpJsEntityType["Age"] = "age";
    NlpJsEntityType["Boolean"] = "boolean";
    NlpJsEntityType["Currency"] = "currency";
    NlpJsEntityType["Date"] = "date";
    NlpJsEntityType["DateRange"] = "daterange";
    NlpJsEntityType["DateTime"] = "datetime";
    NlpJsEntityType["DateTimeRange"] = "datetimerange";
    NlpJsEntityType["Dimension"] = "dimension";
    NlpJsEntityType["Duration"] = "duration";
    NlpJsEntityType["Email"] = "email";
    NlpJsEntityType["Enum"] = "enum";
    NlpJsEntityType["Hashtag"] = "hashtag";
    NlpJsEntityType["Ip"] = "ip";
    NlpJsEntityType["Mention"] = "mention";
    NlpJsEntityType["Number"] = "number";
    NlpJsEntityType["NumberRange"] = "numberrange";
    NlpJsEntityType["Ordinal"] = "ordinal";
    NlpJsEntityType["Percentage"] = "percentage";
    NlpJsEntityType["PhoneNumber"] = "phoneNumber";
    NlpJsEntityType["Regex"] = "regex";
    NlpJsEntityType["Temperature"] = "temperature";
    NlpJsEntityType["Time"] = "time";
    NlpJsEntityType["TimeRange"] = "timerange";
    NlpJsEntityType["Timezone"] = "timezone";
    NlpJsEntityType["Url"] = "url";
})(NlpJsEntityType || (NlpJsEntityType = {}));
var NlpjsNlu = /** @class */ (function (_super) {
    __extends(NlpjsNlu, _super);
    function NlpjsNlu(config) {
        return _super.call(this, config) || this;
    }
    // TODO fully determine default config
    NlpjsNlu.prototype.getDefaultConfig = function () {
        return __assign(__assign({}, _super.prototype.getDefaultConfig.call(this)), { languageMap: {}, preTrainedModelFilePath: './model.nlp', useModel: false, modelsPath: './models' });
    };
    NlpjsNlu.prototype.initialize = function (parent) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        this.nlpjs = new Nlp({
                            languages: Object.keys(this.config.languageMap),
                            autoLoad: this.config.useModel,
                            // TODO: add condition to check if writing is even possible
                            autoSave: this.config.useModel,
                            modelFileName: this.config.preTrainedModelFilePath,
                            nlu: {
                                log: false,
                            },
                        });
                        Object.values(this.config.languageMap).forEach(function (languagePackage) {
                            var _a;
                            (_a = _this.nlpjs) === null || _a === void 0 ? void 0 : _a.use(languagePackage);
                        });
                        if (!this.config.setupModelCallback) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.config.setupModelCallback(parent, this.nlpjs)];
                    case 1:
                        _c.sent();
                        return [3 /*break*/, 7];
                    case 2:
                        if (!this.config.useModel) return [3 /*break*/, 4];
                        return [4 /*yield*/, ((_a = this.nlpjs) === null || _a === void 0 ? void 0 : _a.load(this.config.preTrainedModelFilePath))];
                    case 3:
                        _c.sent();
                        return [3 /*break*/, 7];
                    case 4: return [4 /*yield*/, this.addCorpusFromModelsIn(this.config.modelsPath)];
                    case 5:
                        _c.sent();
                        return [4 /*yield*/, ((_b = this.nlpjs) === null || _b === void 0 ? void 0 : _b.train())];
                    case 6:
                        _c.sent();
                        _c.label = 7;
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    NlpjsNlu.prototype.processText = function (jovo, text) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function () {
            var language, nlpResult, entities;
            var _this = this;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        language = ((_a = jovo.$request.getLocale()) === null || _a === void 0 ? void 0 : _a.substr(0, 2)) || 'en';
                        return [4 /*yield*/, ((_b = this.nlpjs) === null || _b === void 0 ? void 0 : _b.process(language, text))];
                    case 1:
                        nlpResult = _c.sent();
                        entities = ((nlpResult === null || nlpResult === void 0 ? void 0 : nlpResult.entities) || []).reduce(function (entityMap, entity) {
                            var entityName = entity.alias || entity.entity;
                            var resolvedValue = _this.getResolvedValue(entity);
                            entityMap[entityName] = {
                                id: resolvedValue,
                                resolved: resolvedValue,
                                value: entity.utteranceText,
                                native: entity,
                            };
                            return entityMap;
                        }, {});
                        return [2 /*return*/, (nlpResult === null || nlpResult === void 0 ? void 0 : nlpResult.intent)
                                ? {
                                    intent: {
                                        name: nlpResult.intent,
                                    },
                                    entities: entities,
                                    native: nlpResult,
                                    raw: nlpResult, // @deprecated please use 'native' property
                                }
                                : undefined];
                }
            });
        });
    };
    NlpjsNlu.prototype.addCorpusFromModelsIn = function (dir) {
        return __awaiter(this, void 0, void 0, function () {
            var files, jovoNlpjsConverter, i, len, lastDotIndex, extension, locale, filePath, jovoModelData, fileBuffer, nlpJsModeFiles;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, promises.readdir(dir)];
                    case 1:
                        files = _a.sent();
                        jovoNlpjsConverter = new JovoModelNlpjs();
                        i = 0, len = files.length;
                        _a.label = 2;
                    case 2:
                        if (!(i < len)) return [3 /*break*/, 7];
                        lastDotIndex = files[i].lastIndexOf('.');
                        extension = files[i].substr(lastDotIndex + 1);
                        locale = files[i].substr(0, lastDotIndex);
                        filePath = join(dir, files[i]);
                        jovoModelData = void 0;
                        if (!(extension === 'js')) return [3 /*break*/, 3];
                        jovoModelData = require(join(process.cwd(), filePath));
                        return [3 /*break*/, 5];
                    case 3:
                        if (!(extension === 'json')) return [3 /*break*/, 5];
                        return [4 /*yield*/, promises.readFile(filePath)];
                    case 4:
                        fileBuffer = _a.sent();
                        jovoModelData = JSON.parse(fileBuffer.toString());
                        _a.label = 5;
                    case 5:
                        jovoNlpjsConverter.importJovoModel(jovoModelData, locale);
                        nlpJsModeFiles = jovoNlpjsConverter.exportNative() || [];
                        nlpJsModeFiles.forEach(function (model) {
                            var _a;
                            (_a = _this.nlpjs) === null || _a === void 0 ? void 0 : _a.addCorpus(model.content);
                        });
                        _a.label = 6;
                    case 6:
                        i++;
                        return [3 /*break*/, 2];
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    NlpjsNlu.prototype.getResolvedValue = function (entity) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w;
        switch (entity.type) {
            case NlpJsEntityType.Enum:
                return (_a = entity.option) !== null && _a !== void 0 ? _a : entity.utteranceText;
            case NlpJsEntityType.Regex:
                return entity.utteranceText;
            case NlpJsEntityType.Age:
            case NlpJsEntityType.Currency:
            case NlpJsEntityType.Dimension:
            case NlpJsEntityType.Number:
            case NlpJsEntityType.Ordinal:
            case NlpJsEntityType.Temperature:
                return (_c = (_b = entity === null || entity === void 0 ? void 0 : entity.resolution) === null || _b === void 0 ? void 0 : _b.strValue) !== null && _c !== void 0 ? _c : entity.utteranceText;
            case NlpJsEntityType.Date:
                return ((_g = (_e = (_d = entity === null || entity === void 0 ? void 0 : entity.resolution) === null || _d === void 0 ? void 0 : _d.strValue) !== null && _e !== void 0 ? _e : (_f = entity === null || entity === void 0 ? void 0 : entity.resolution) === null || _f === void 0 ? void 0 : _f.strFutureValue) !== null && _g !== void 0 ? _g : entity.utteranceText);
            case NlpJsEntityType.Boolean:
            case NlpJsEntityType.Percentage:
                return ((_h = entity === null || entity === void 0 ? void 0 : entity.resolution) === null || _h === void 0 ? void 0 : _h.value)
                    ? entity.resolution.value.toString()
                    : entity.utteranceText;
            case NlpJsEntityType.Time:
            case NlpJsEntityType.DateTime:
                return (_m = (_l = (_k = (_j = entity === null || entity === void 0 ? void 0 : entity.resolution) === null || _j === void 0 ? void 0 : _j.values) === null || _k === void 0 ? void 0 : _k[0]) === null || _l === void 0 ? void 0 : _l.value) !== null && _m !== void 0 ? _m : entity.utteranceText;
            case NlpJsEntityType.Duration:
            case NlpJsEntityType.TimeRange:
                return (_r = (_q = (_p = (_o = entity === null || entity === void 0 ? void 0 : entity.resolution) === null || _o === void 0 ? void 0 : _o.values) === null || _p === void 0 ? void 0 : _p[0]) === null || _q === void 0 ? void 0 : _q.timex) !== null && _r !== void 0 ? _r : entity.utteranceText;
            case NlpJsEntityType.Email:
            case NlpJsEntityType.Hashtag:
            case NlpJsEntityType.Ip:
            case NlpJsEntityType.Mention:
            case NlpJsEntityType.PhoneNumber:
            case NlpJsEntityType.Url:
                return (_u = (_t = (_s = entity === null || entity === void 0 ? void 0 : entity.resolution) === null || _s === void 0 ? void 0 : _s.value) === null || _t === void 0 ? void 0 : _t.toString()) !== null && _u !== void 0 ? _u : entity.utteranceText;
            case NlpJsEntityType.DateRange:
            case NlpJsEntityType.DateTimeRange:
                return (_w = (_v = entity === null || entity === void 0 ? void 0 : entity.resolution) === null || _v === void 0 ? void 0 : _v.timex) !== null && _w !== void 0 ? _w : entity.utteranceText;
            case NlpJsEntityType.NumberRange:
            case NlpJsEntityType.Timezone:
            default:
                // if no explicit mapping, use utteranceText
                // can still access full details from "native" property
                return entity.utteranceText;
        }
    };
    return NlpjsNlu;
}(NluPlugin));
export { NlpjsNlu };
//# sourceMappingURL=NlpjsNlu.js.map