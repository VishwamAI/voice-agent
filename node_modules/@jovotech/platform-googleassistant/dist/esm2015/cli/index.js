import { JovoCliPlugin, Log, promptSupportedLocales, } from '@jovotech/cli-core';
import { join as joinPaths } from 'path';
import { BuildHook } from './hooks/BuildHook';
import { DeployHook } from './hooks/DeployHook';
import { GetHook } from './hooks/GetHook';
import { SupportedLocales } from './utilities';
export class GoogleAssistantCli extends JovoCliPlugin {
    constructor(config) {
        super(config);
    }
    get id() {
        return 'googleAssistant';
    }
    get type() {
        return 'platform';
    }
    get platformDirectory() {
        return `${this.type}.${this.id}`;
    }
    getHooks() {
        return [BuildHook, GetHook, DeployHook];
    }
    getDefaultConfig() {
        return { projectId: '<YOUR-PROJECT-ID>', resourcesDirectory: joinPaths('resources', this.id) };
    }
    async getInitConfig() {
        const initConfig = { projectId: '<YOUR-PROJECT-ID>' };
        // Check for invalid locales and provide a default locale map.
        for (const locale of this.$context.locales) {
            if (!SupportedLocales.includes(locale)) {
                Log.spacer();
                // Prompt user for alternative locale.
                const { locales } = await promptSupportedLocales(locale, 'GoogleAssistant', SupportedLocales);
                if (!locales.length) {
                    continue;
                }
                if (!initConfig.locales) {
                    initConfig.locales = {};
                }
                initConfig.locales[locale] = locales;
            }
        }
        return initConfig;
    }
    get name() {
        return this.constructor.name;
    }
    /**
     * Returns base path to platform's build folder
     */
    get platformPath() {
        return joinPaths(this.$cli.project.getBuildPath(), this.platformDirectory);
    }
}
//# sourceMappingURL=index.js.map