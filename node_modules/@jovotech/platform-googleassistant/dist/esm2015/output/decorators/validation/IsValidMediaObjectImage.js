import { formatValidationErrors, IsEitherValid, validate, } from '@jovotech/output';
import { Image } from '../../models';
export function IsValidMediaObjectImage(validationOptions) {
    return IsEitherValid({
        name: 'isValidMediaObjectImage',
        keys: ['large', 'icon'],
        validate: async (value) => {
            if (!(value instanceof Image)) {
                return `$property has to be an instance of Image`;
            }
            const errors = await validate(value);
            if (errors.length) {
                return formatValidationErrors(errors, {
                    text: '$property is invalid:',
                    delimiter: '\n  - ',
                    path: '$property',
                });
            }
            return;
        },
    }, validationOptions);
}
//# sourceMappingURL=IsValidMediaObjectImage.js.map