var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { IsArray, IsEnum, IsNotEmpty, IsObject, IsOptional, IsString, Type, ValidateNested, } from '@jovotech/output';
export var AccountLinkingStatus;
(function (AccountLinkingStatus) {
    AccountLinkingStatus["Unspecified"] = "ACCOUNT_LINKING_STATUS_UNSPECIFIED";
    AccountLinkingStatus["NotLinked"] = "NOT_LINKED";
    AccountLinkingStatus["Linked"] = "LINKED";
})(AccountLinkingStatus || (AccountLinkingStatus = {}));
export var UserVerificationStatus;
(function (UserVerificationStatus) {
    UserVerificationStatus["Unspecified"] = "USER_VERIFICATION_STATUS_UNSPECIFIED";
    UserVerificationStatus["Guest"] = "GUEST";
    UserVerificationStatus["Verified"] = "VERIFIED";
})(UserVerificationStatus || (UserVerificationStatus = {}));
export class IntentSubscription {
}
__decorate([
    IsString(),
    IsNotEmpty(),
    __metadata("design:type", String)
], IntentSubscription.prototype, "intent", void 0);
__decorate([
    IsString(),
    IsNotEmpty(),
    __metadata("design:type", String)
], IntentSubscription.prototype, "contentTitle", void 0);
export class Engagement {
}
__decorate([
    IsArray(),
    ValidateNested({ each: true }),
    Type(() => IntentSubscription),
    __metadata("design:type", Array)
], Engagement.prototype, "pushNotificationIntents", void 0);
__decorate([
    IsArray(),
    ValidateNested({ each: true }),
    Type(() => IntentSubscription),
    __metadata("design:type", Array)
], Engagement.prototype, "dailyUpdateIntents", void 0);
export var SkuType;
(function (SkuType) {
    SkuType["Unspecified"] = "SKU_TYPE_UNSPECIFIED";
    SkuType["InApp"] = "IN_APP";
    SkuType["Subscription"] = "SUBSCRIPTION";
    SkuType["App"] = "APP";
})(SkuType || (SkuType = {}));
export class SignedData {
}
__decorate([
    IsObject(),
    __metadata("design:type", Object)
], SignedData.prototype, "inAppPurchaseData", void 0);
__decorate([
    IsString(),
    IsNotEmpty(),
    __metadata("design:type", String)
], SignedData.prototype, "inAppDataSignature", void 0);
export class Entitlement {
}
__decorate([
    IsString(),
    IsNotEmpty(),
    __metadata("design:type", String)
], Entitlement.prototype, "sku", void 0);
__decorate([
    IsEnum(SkuType),
    __metadata("design:type", String)
], Entitlement.prototype, "skuType", void 0);
__decorate([
    ValidateNested(),
    Type(() => SignedData),
    __metadata("design:type", SignedData)
], Entitlement.prototype, "inAppDetails", void 0);
export class PackageEntitlements {
}
__decorate([
    IsString(),
    IsNotEmpty(),
    __metadata("design:type", String)
], PackageEntitlements.prototype, "packageName", void 0);
__decorate([
    IsArray(),
    ValidateNested({ each: true }),
    Type(() => Entitlement),
    __metadata("design:type", Array)
], PackageEntitlements.prototype, "entitlements", void 0);
export class User {
}
__decorate([
    IsString(),
    IsNotEmpty(),
    __metadata("design:type", String)
], User.prototype, "locale", void 0);
__decorate([
    IsOptional(),
    IsObject(),
    __metadata("design:type", Object)
], User.prototype, "params", void 0);
__decorate([
    IsEnum(AccountLinkingStatus),
    __metadata("design:type", String)
], User.prototype, "accountLinkingStatus", void 0);
__decorate([
    IsEnum(UserVerificationStatus),
    __metadata("design:type", String)
], User.prototype, "verificationStatus", void 0);
__decorate([
    IsString(),
    IsNotEmpty(),
    __metadata("design:type", String)
], User.prototype, "lastSeenTime", void 0);
__decorate([
    ValidateNested(),
    Type(() => Engagement),
    __metadata("design:type", Engagement)
], User.prototype, "engagement", void 0);
__decorate([
    IsArray(),
    ValidateNested({ each: true }),
    Type(() => PackageEntitlements),
    __metadata("design:type", Array)
], User.prototype, "packageEntitlements", void 0);
//# sourceMappingURL=User.js.map