import { CliArgs, CliFlags, PluginCommand, PluginContext } from '@jovotech/cli-core';
export interface NewStageContext extends PluginContext {
    args: CliArgs<typeof NewStage>;
    flags: CliFlags<typeof NewStage>;
}
export declare type NewStageEvents = 'before.new:stage' | 'new:stage' | 'after.new:stage';
export declare class NewStage extends PluginCommand<NewStageEvents> {
    static id: string;
    static description: string;
    static examples: string[];
    static args: {
        readonly name: "stage";
        readonly description: "Name of the stage.";
        readonly required: true;
    }[];
    $context: NewStageContext;
    install(): void;
    /**
     * Checks if a stage exists already.
     */
    checkForExistingStage(): Promise<void>;
    /**
     * Creates a new stage. Installs selected plugins and writes corresponding files.
     */
    createNewStage(): Promise<void>;
    run(): Promise<void>;
}
