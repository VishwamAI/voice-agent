"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JovoModelBuilder = void 0;
const JovoModelHelper_1 = require("./JovoModelHelper");
const EXCLUDED_PROPERTIES = ['new', 'prototype'];
class JovoModelBuilder {
    constructor(model, $timestamp = new Date().getTime()) {
        this.$timestamp = $timestamp;
        this.prepareBuilder();
        this.$model = model
            ? JSON.parse(JSON.stringify(model))
            : JovoModelHelper_1.JovoModelHelper.prepareModel({ version: '4.0', invocation: '' });
    }
    build() {
        return JSON.parse(JSON.stringify(this.$model));
    }
    prepareBuilder() {
        this.loadFunctions();
    }
    loadFunctions() {
        const staticHelperMethodNames = Object.getOwnPropertyNames(JovoModelHelper_1.JovoModelHelper).filter((prop) => {
            return (typeof JovoModelHelper_1.JovoModelHelper[prop] === 'function' &&
                !EXCLUDED_PROPERTIES.includes(prop));
        });
        for (const methodName of staticHelperMethodNames) {
            const method = JovoModelHelper_1.JovoModelHelper[methodName];
            JovoModelBuilder.prototype[methodName] = (...args) => {
                const result = method.call(JovoModelHelper_1.JovoModelHelper, this.$model, ...args);
                if (result || methodName === 'getIntentByName' || methodName === 'getEntityTypeByName') {
                    return result;
                }
                return this;
            };
        }
    }
}
exports.JovoModelBuilder = JovoModelBuilder;
JovoModelBuilder.$initialized = false;
//# sourceMappingURL=JovoModelBuilder.js.map