import _mergeWith from 'lodash.mergewith';
var Configurable = /** @class */ (function () {
    function Configurable(config) {
        this.initConfig = config;
        var defaultConfig = this.getDefaultConfig();
        this.config = config
            ? _mergeWith(defaultConfig, config, function (objValue, srcValue) {
                if (Array.isArray(objValue)) {
                    return srcValue;
                }
            })
            : defaultConfig;
    }
    Configurable.prototype.mergeConfig = function (config) {
        this.config = _mergeWith(this.config, config, function (objValue, srcValue) {
            if (Array.isArray(objValue)) {
                return srcValue;
            }
        });
    };
    Object.defineProperty(Configurable.prototype, "name", {
        get: function () {
            return this.constructor.name;
        },
        enumerable: false,
        configurable: true
    });
    return Configurable;
}());
export { Configurable };
//# sourceMappingURL=Configurable.js.map