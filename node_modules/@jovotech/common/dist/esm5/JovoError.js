var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var JovoError = /** @class */ (function (_super) {
    __extends(JovoError, _super);
    function JovoError(messageOrOptions) {
        var _this = _super.call(this, typeof messageOrOptions === 'string' ? messageOrOptions : messageOrOptions.message) || this;
        if (typeof messageOrOptions === 'string') {
            _this.name = _this.constructor.name;
        }
        else {
            _this.name = messageOrOptions.name || _this.constructor.name;
            if (messageOrOptions.package) {
                _this.package = messageOrOptions.package;
            }
            if (messageOrOptions.context) {
                _this.context = messageOrOptions.context;
            }
            if (messageOrOptions.hint) {
                _this.hint = messageOrOptions.hint;
            }
            if (messageOrOptions.learnMore) {
                _this.learnMore = messageOrOptions.learnMore;
            }
        }
        return _this;
    }
    // Used by JSON.stringify.
    JovoError.prototype.toJSON = function () {
        return __assign(__assign({}, this), { message: this.message });
    };
    return JovoError;
}(Error));
export { JovoError };
//# sourceMappingURL=JovoError.js.map