var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { ArrayMinSize, Equals, IsArray, IsEnum, IsNotEmpty, IsOptional, IsString, MaxLength, Type, ValidateNested, } from '@jovotech/output';
import { DISPLAY_TEMPLATE_TITLE_MAX_LENGTH, LIST_TEMPLATE_MIN_SIZE } from '../../../constants';
import { Image } from '../../common/Image';
import { BackButtonVisibility, DisplayTemplateType, } from '../DisplayTemplate';
import { DisplayTemplateList1Item } from '../list-items/DisplayTemplateList1Item';
var ListTemplate1 = /** @class */ (function () {
    function ListTemplate1() {
    }
    __decorate([
        Equals(DisplayTemplateType.List1),
        __metadata("design:type", String)
    ], ListTemplate1.prototype, "type", void 0);
    __decorate([
        IsString(),
        IsNotEmpty(),
        __metadata("design:type", String)
    ], ListTemplate1.prototype, "token", void 0);
    __decorate([
        IsOptional(),
        IsEnum(BackButtonVisibility),
        __metadata("design:type", String)
    ], ListTemplate1.prototype, "backButton", void 0);
    __decorate([
        IsString(),
        IsNotEmpty(),
        MaxLength(DISPLAY_TEMPLATE_TITLE_MAX_LENGTH),
        __metadata("design:type", String)
    ], ListTemplate1.prototype, "title", void 0);
    __decorate([
        IsOptional(),
        ValidateNested(),
        Type(function () { return Image; }),
        __metadata("design:type", Image)
    ], ListTemplate1.prototype, "backgroundImage", void 0);
    __decorate([
        IsArray(),
        ArrayMinSize(LIST_TEMPLATE_MIN_SIZE),
        ValidateNested({
            each: true,
        }),
        Type(function () { return DisplayTemplateList1Item; }),
        __metadata("design:type", Array)
    ], ListTemplate1.prototype, "listItems", void 0);
    return ListTemplate1;
}());
export { ListTemplate1 };
//# sourceMappingURL=ListTemplate1.js.map