var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { BaseOutput, Output } from '@jovotech/framework';
var DialogDelegateRequestOutput = /** @class */ (function (_super) {
    __extends(DialogDelegateRequestOutput, _super);
    function DialogDelegateRequestOutput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DialogDelegateRequestOutput.prototype.build = function () {
        var _this = this;
        var _a, _b;
        var getSlotsFromEntities = function () {
            return Object.entries(_this.$entities).reduce(function (slots, _a) {
                var entityKey = _a[0], entity = _a[1];
                slots[entityKey] = {
                    name: entityKey,
                    value: entity.value,
                };
                return slots;
            }, {});
        };
        // If dialog is delegated back to Jovo and slots are omitted, set them automatically
        if (this.options.target === 'skill' &&
            ((_a = this.options.updatedRequest) === null || _a === void 0 ? void 0 : _a.intent) &&
            !this.options.updatedRequest.intent.slots) {
            this.options.updatedRequest.intent.slots = getSlotsFromEntities();
        }
        if (this.options.target === 'AMAZON.Conversations' &&
            ((_b = this.options.updatedRequest) === null || _b === void 0 ? void 0 : _b.input) &&
            !this.options.updatedRequest.input.slots) {
            this.options.updatedRequest.input.slots = getSlotsFromEntities();
        }
        return {
            platforms: {
                alexa: {
                    nativeResponse: {
                        response: {
                            directives: [
                                {
                                    type: 'Dialog.DelegateRequest',
                                    target: this.options.target,
                                    period: {
                                        until: 'EXPLICIT_RETURN',
                                    },
                                    updatedRequest: this.options.updatedRequest,
                                },
                            ],
                        },
                    },
                },
            },
        };
    };
    DialogDelegateRequestOutput = __decorate([
        Output()
    ], DialogDelegateRequestOutput);
    return DialogDelegateRequestOutput;
}(BaseOutput));
export { DialogDelegateRequestOutput };
//# sourceMappingURL=DialogDelegateRequestOutput.js.map