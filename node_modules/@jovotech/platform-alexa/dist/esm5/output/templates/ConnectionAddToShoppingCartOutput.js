var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { BaseOutput, Output } from '@jovotech/framework';
import { OnCompletion } from '../models/common/OnCompletion';
import { StartConnectionOutput } from './StartConnectionOutput';
var ConnectionAddToShoppingCartOutput = /** @class */ (function (_super) {
    __extends(ConnectionAddToShoppingCartOutput, _super);
    function ConnectionAddToShoppingCartOutput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ConnectionAddToShoppingCartOutput.prototype.getDefaultOptions = function () {
        return {
            onCompletion: OnCompletion.ResumeSession,
            products: [],
        };
    };
    ConnectionAddToShoppingCartOutput.prototype.build = function () {
        return new StartConnectionOutput(this.jovo, {
            taskName: { name: 'AddToShoppingCart', amazonPredefinedTask: true },
            taskVersion: 1,
            shouldEndSession: this.options.shouldEndSession,
            onCompletion: this.options.onCompletion,
            input: {
                products: this.options.products,
            },
            token: this.options.token,
        }).build();
    };
    ConnectionAddToShoppingCartOutput = __decorate([
        Output()
    ], ConnectionAddToShoppingCartOutput);
    return ConnectionAddToShoppingCartOutput;
}(BaseOutput));
export { ConnectionAddToShoppingCartOutput };
//# sourceMappingURL=ConnectionAddToShoppingCartOutput.js.map