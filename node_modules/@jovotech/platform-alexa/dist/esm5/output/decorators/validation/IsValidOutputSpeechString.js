import { registerDecorator } from '@jovotech/output';
import { validateAlexaString } from '../../utilities';
export function IsValidOutputSpeechString(relatedType, options) {
    return function (object, propertyKey) {
        registerDecorator({
            name: 'isValidOutputSpeechString',
            target: object.constructor,
            propertyName: propertyKey.toString(),
            constraints: [],
            options: options,
            validator: {
                validate: function (value, args) {
                    var type = args.object.type;
                    // if there is no type, skip for now because another decorator should take care of that
                    if (!type) {
                        return true;
                    }
                    if (type === relatedType) {
                        var result = validateAlexaString(value);
                        if (result) {
                            args.constraints[0] = result;
                            return false;
                        }
                    }
                    else if (value) {
                        args.constraints[0] = "$property can not be set when the type is " + type;
                        return false;
                    }
                    return true;
                },
                defaultMessage: function (args) {
                    return args.constraints[0];
                },
            },
        });
    };
}
//# sourceMappingURL=IsValidOutputSpeechString.js.map