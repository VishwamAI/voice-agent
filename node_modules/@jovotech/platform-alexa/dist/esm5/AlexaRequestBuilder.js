var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { RequestBuilder } from '@jovotech/framework';
import { join as joinPaths } from 'path';
import { AlexaRequest } from './AlexaRequest';
var AlexaRequestBuilder = /** @class */ (function (_super) {
    __extends(AlexaRequestBuilder, _super);
    function AlexaRequestBuilder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AlexaRequestBuilder.prototype.launch = function (json) {
        // eslint-disable-next-line @typescript-eslint/no-var-requires
        var launchJson = require(joinPaths(__dirname, '..', '..', 'sample-requests', 'LaunchRequest.json'));
        var request = Object.create(AlexaRequest.prototype);
        return Object.assign(request, json || launchJson);
    };
    AlexaRequestBuilder.prototype.intent = function (nameOrJson) {
        // eslint-disable-next-line @typescript-eslint/no-var-requires
        var intentJson = require(joinPaths(__dirname, '..', '..', 'sample-requests', 'IntentRequest.json'));
        var request = Object.create(AlexaRequest.prototype);
        if (typeof nameOrJson === 'string') {
            Object.assign(request, intentJson);
            request.setIntent(nameOrJson);
        }
        else {
            Object.assign(request, nameOrJson || intentJson);
        }
        return request;
    };
    return AlexaRequestBuilder;
}(RequestBuilder));
export { AlexaRequestBuilder };
//# sourceMappingURL=AlexaRequestBuilder.js.map