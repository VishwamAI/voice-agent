var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Platform, } from '@jovotech/framework';
import { Alexa } from './Alexa';
import { AlexaDevice } from './AlexaDevice';
import { AlexaRequest } from './AlexaRequest';
import { AlexaRequestBuilder } from './AlexaRequestBuilder';
import { AlexaUser } from './AlexaUser';
import { AlexaOutputTemplateConverterStrategy } from './output';
var AlexaPlatform = /** @class */ (function (_super) {
    __extends(AlexaPlatform, _super);
    function AlexaPlatform() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.id = 'alexa';
        _this.outputTemplateConverterStrategy = new AlexaOutputTemplateConverterStrategy();
        _this.requestClass = AlexaRequest;
        _this.jovoClass = Alexa;
        _this.userClass = AlexaUser;
        _this.deviceClass = AlexaDevice;
        _this.requestBuilder = AlexaRequestBuilder;
        return _this;
    }
    AlexaPlatform.prototype.getDefaultConfig = function () {
        return {
            intentMap: {
                'AMAZON.StopIntent': 'END',
                'AMAZON.CancelIntent': 'END',
            },
            output: {
                genericOutputToApl: true,
            },
        };
    };
    AlexaPlatform.prototype.getInitConfig = function () {
        return {
            intentMap: {
                'AMAZON.StopIntent': 'END',
                'AMAZON.CancelIntent': 'END',
            },
        };
    };
    AlexaPlatform.prototype.mount = function (parent) {
        var _this = this;
        _super.prototype.mount.call(this, parent);
        this.middlewareCollection.use('request.start', function (jovo) {
            return _this.onRequestStart(jovo);
        });
    };
    AlexaPlatform.prototype.isRequestRelated = function (request) {
        return request.version && request.request && request.request.requestId;
    };
    AlexaPlatform.prototype.isResponseRelated = function (response) {
        return response.version && response.response;
    };
    AlexaPlatform.prototype.finalizeResponse = function (response, alexaSkill) {
        response.sessionAttributes = alexaSkill.$session;
        return response;
    };
    AlexaPlatform.prototype.onRequestStart = function (jovo) {
        var _a, _b, _c, _d;
        // Generate generic output to APL if supported and set in config
        this.outputTemplateConverterStrategy.config.genericOutputToApl = !!(((_b = (_a = jovo.$alexa) === null || _a === void 0 ? void 0 : _a.$request) === null || _b === void 0 ? void 0 : _b.isAplSupported()) && ((_c = this.config.output) === null || _c === void 0 ? void 0 : _c.genericOutputToApl));
        this.outputTemplateConverterStrategy.config.aplTemplates = (_d = this.config.output) === null || _d === void 0 ? void 0 : _d.aplTemplates;
    };
    return AlexaPlatform;
}(Platform));
export { AlexaPlatform };
//# sourceMappingURL=AlexaPlatform.js.map