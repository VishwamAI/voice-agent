import { JovoUser } from '@jovotech/framework';
import { ProfileProperty, sendCustomerProfileApiRequest } from './api';
import { PersonProfileProperty, sendPersonProfileApiRequest, } from './api/PersonProfileApi';
import { deleteReminder, getAllReminders, getReminder, setReminder, updateReminder, } from './api/ReminderApi';
import { getListItem, getListItems, getLists } from './api/ListApi';
export class AlexaUser extends JovoUser {
    constructor(jovo) {
        super(jovo);
    }
    get id() {
        return this.jovo.$request.getUserId();
    }
    get accessToken() {
        var _a;
        return (_a = this.jovo.$request.session) === null || _a === void 0 ? void 0 : _a.user.accessToken;
    }
    async getEmail() {
        return await this.getProfileProperty(ProfileProperty.EMAIL);
    }
    async getMobileNumber() {
        return await this.getProfileProperty(ProfileProperty.MOBILE_NUMBER);
    }
    async getName() {
        return await this.getProfileProperty(ProfileProperty.NAME);
    }
    async getGivenName() {
        return await this.getProfileProperty(ProfileProperty.GIVEN_NAME);
    }
    async getSpeakerName() {
        return await this.getPersonProfileProperty(PersonProfileProperty.NAME);
    }
    async getSpeakerGivenName() {
        return await this.getPersonProfileProperty(PersonProfileProperty.GIVEN_NAME);
    }
    async getSpeakerMobileNumber() {
        return await this.getPersonProfileProperty(PersonProfileProperty.MOBILE_NUMBER);
    }
    async getPersonProfileProperty(property) {
        const request = this.jovo.$request;
        return sendPersonProfileApiRequest(property, request.getApiEndpoint(), request.getApiAccessToken());
    }
    async getProfileProperty(property) {
        const request = this.jovo.$request;
        return sendCustomerProfileApiRequest(property, request.getApiEndpoint(), request.getApiAccessToken());
    }
    async setReminder(reminder) {
        const request = this.jovo.$request;
        return setReminder(reminder, request.getApiEndpoint(), request.getApiAccessToken());
    }
    async updateReminder(alertToken, reminder) {
        const request = this.jovo.$request;
        return updateReminder(alertToken, reminder, request.getApiEndpoint(), request.getApiAccessToken());
    }
    async deleteReminder(alertToken) {
        const request = this.jovo.$request;
        return deleteReminder(alertToken, request.getApiEndpoint(), request.getApiAccessToken());
    }
    async getAllReminders() {
        const request = this.jovo.$request;
        return getAllReminders(request.getApiEndpoint(), request.getApiAccessToken());
    }
    async getReminder(alertToken) {
        const request = this.jovo.$request;
        return getReminder(alertToken, request.getApiEndpoint(), request.getApiAccessToken());
    }
    getLists() {
        const request = this.jovo.$request;
        return getLists(request.getApiEndpoint(), request.getApiAccessToken());
    }
    getListItem(listId, itemId) {
        const request = this.jovo.$request;
        return getListItem(listId, itemId, request.getApiEndpoint(), request.getApiAccessToken());
    }
    getListItems(listId, itemIds) {
        const request = this.jovo.$request;
        return getListItems(listId, itemIds, request.getApiEndpoint(), request.getApiAccessToken());
    }
}
//# sourceMappingURL=AlexaUser.js.map