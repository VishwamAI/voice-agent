var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Equals, IsEnum, Type } from '@jovotech/output';
import { IsValidDynamicEntitiesSlotTypesArray } from '../../decorators/validation/IsValidDynamicEntitiesSlotTypesArray';
import { SlotType } from '../common/SlotType';
import { Directive } from '../Directive';
export var DynamicEntitiesUpdateBehavior;
(function (DynamicEntitiesUpdateBehavior) {
    DynamicEntitiesUpdateBehavior["Replace"] = "REPLACE";
    DynamicEntitiesUpdateBehavior["Clear"] = "CLEAR";
})(DynamicEntitiesUpdateBehavior || (DynamicEntitiesUpdateBehavior = {}));
export class DialogUpdateDynamicEntitiesDirective extends Directive {
    constructor() {
        super();
        this.type = 'Dialog.UpdateDynamicEntities';
    }
}
__decorate([
    Equals('Dialog.UpdateDynamicEntities'),
    __metadata("design:type", String)
], DialogUpdateDynamicEntitiesDirective.prototype, "type", void 0);
__decorate([
    IsEnum(DynamicEntitiesUpdateBehavior),
    __metadata("design:type", String)
], DialogUpdateDynamicEntitiesDirective.prototype, "updateBehavior", void 0);
__decorate([
    IsValidDynamicEntitiesSlotTypesArray(),
    Type(() => SlotType),
    __metadata("design:type", Array)
], DialogUpdateDynamicEntitiesDirective.prototype, "types", void 0);
//# sourceMappingURL=DialogUpdateDynamicEntitiesDirective.js.map