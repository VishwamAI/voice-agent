var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Equals, IsObject, IsOptional, Type, ValidateNested } from '@jovotech/output';
import { Directive } from '../Directive';
import { HtmlTransformers } from './HtmlTransformers';
export class HtmlHandleMessageDirective extends Directive {
}
__decorate([
    Equals('Alexa.Presentation.HTML.HandleMessage'),
    __metadata("design:type", String)
], HtmlHandleMessageDirective.prototype, "type", void 0);
__decorate([
    IsOptional(),
    IsObject(),
    __metadata("design:type", Object)
], HtmlHandleMessageDirective.prototype, "message", void 0);
__decorate([
    IsOptional(),
    ValidateNested(),
    Type(() => HtmlTransformers),
    __metadata("design:type", HtmlTransformers)
], HtmlHandleMessageDirective.prototype, "transformer", void 0);
//# sourceMappingURL=HtmlHandleMessageDirective.js.map