var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Equals, Type, ValidateNested } from '@jovotech/output';
import { Directive } from '../Directive';
import { DisplayTemplate, DisplayTemplateType } from './DisplayTemplate';
import { BodyTemplate1 } from './templates/BodyTemplate1';
import { BodyTemplate2 } from './templates/BodyTemplate2';
import { BodyTemplate3 } from './templates/BodyTemplate3';
import { BodyTemplate6 } from './templates/BodyTemplate6';
import { BodyTemplate7 } from './templates/BodyTemplate7';
import { ListTemplate1 } from './templates/ListTemplate1';
import { ListTemplate2 } from './templates/ListTemplate2';
export class DisplayRenderTemplateDirective extends Directive {
}
__decorate([
    Equals('Display.RenderTemplate'),
    __metadata("design:type", String)
], DisplayRenderTemplateDirective.prototype, "type", void 0);
__decorate([
    ValidateNested(),
    Type(() => DisplayTemplate, {
        keepDiscriminatorProperty: true,
        discriminator: {
            property: 'type',
            subTypes: [
                { value: BodyTemplate1, name: DisplayTemplateType.Body1 },
                { value: BodyTemplate2, name: DisplayTemplateType.Body2 },
                { value: BodyTemplate3, name: DisplayTemplateType.Body3 },
                { value: BodyTemplate6, name: DisplayTemplateType.Body6 },
                { value: BodyTemplate7, name: DisplayTemplateType.Body7 },
                { value: ListTemplate1, name: DisplayTemplateType.List1 },
                { value: ListTemplate2, name: DisplayTemplateType.List2 },
            ],
        },
    }),
    __metadata("design:type", DisplayTemplate)
], DisplayRenderTemplateDirective.prototype, "template", void 0);
//# sourceMappingURL=DisplayRenderTemplateDirective.js.map