var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Equals, IsEnum, IsNotEmpty, IsOptional, IsString, MaxLength, Type, ValidateNested, } from '@jovotech/output';
import { BODY_TEMPLATE_MAIN_TEXT_MAX_LENGTH, DISPLAY_TEMPLATE_TITLE_MAX_LENGTH, } from '../../../constants';
import { MainTextMaxLength } from '../../../decorators/validation/MainTextMaxLength';
import { Image } from '../../common/Image';
import { BackButtonVisibility, DisplayTemplateType, } from '../DisplayTemplate';
import { TextContent } from '../TextContent';
export class BodyTemplate1 {
}
__decorate([
    Equals(DisplayTemplateType.Body1),
    __metadata("design:type", String)
], BodyTemplate1.prototype, "type", void 0);
__decorate([
    IsString(),
    IsNotEmpty(),
    __metadata("design:type", String)
], BodyTemplate1.prototype, "token", void 0);
__decorate([
    IsOptional(),
    IsEnum(BackButtonVisibility),
    __metadata("design:type", String)
], BodyTemplate1.prototype, "backButton", void 0);
__decorate([
    IsOptional(),
    ValidateNested(),
    Type(() => Image),
    __metadata("design:type", Image)
], BodyTemplate1.prototype, "backgroundImage", void 0);
__decorate([
    IsString(),
    IsNotEmpty(),
    MaxLength(DISPLAY_TEMPLATE_TITLE_MAX_LENGTH),
    __metadata("design:type", String)
], BodyTemplate1.prototype, "title", void 0);
__decorate([
    MainTextMaxLength(BODY_TEMPLATE_MAIN_TEXT_MAX_LENGTH),
    ValidateNested(),
    Type(() => TextContent),
    __metadata("design:type", TextContent)
], BodyTemplate1.prototype, "textContent", void 0);
//# sourceMappingURL=BodyTemplate1.js.map