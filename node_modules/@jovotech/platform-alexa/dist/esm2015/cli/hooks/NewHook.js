import { readdirSync, readFileSync, writeFileSync } from 'fs';
import { join as joinPaths } from 'path';
import AlexaModel from '../boilerplate/AlexaModel.json';
import { AlexaHook } from './AlexaHook';
export class NewHook extends AlexaHook {
    install() {
        this.middlewareCollection = {
            new: [this.addSystemIntents.bind(this)],
        };
    }
    addSystemIntents() {
        const modelsPath = joinPaths(this.$cli.projectPath, this.$context.projectName, 'models');
        const modelFiles = readdirSync(modelsPath);
        for (const modelFile of modelFiles) {
            const modelPath = joinPaths(modelsPath, modelFile);
            const rawModelData = readFileSync(modelPath, 'utf-8');
            const model = JSON.parse(rawModelData);
            const updatedModel = Object.assign(Object.assign({}, model), AlexaModel);
            writeFileSync(modelPath, JSON.stringify(updatedModel, null, 2));
        }
    }
}
//# sourceMappingURL=NewHook.js.map