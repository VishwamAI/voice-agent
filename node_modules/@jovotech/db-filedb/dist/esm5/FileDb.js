var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { DbPlugin } from '@jovotech/framework';
import fs from 'fs';
import path from 'path';
import process from 'process';
var FileDb = /** @class */ (function (_super) {
    __extends(FileDb, _super);
    function FileDb(config) {
        return _super.call(this, config) || this;
    }
    FileDb.prototype.getDefaultConfig = function () {
        return __assign(__assign({}, _super.prototype.getDefaultConfig.call(this)), { skipTests: true, pathToFile: '../db/db.json' });
    };
    Object.defineProperty(FileDb.prototype, "pathToFile", {
        get: function () {
            if (path.isAbsolute(this.config.pathToFile)) {
                return this.config.pathToFile;
            }
            // Make sure the pathToFile is applied relative to the dist-dir
            return path.join(process.cwd(), 'dist', this.config.pathToFile);
        },
        enumerable: false,
        configurable: true
    });
    FileDb.prototype.initialize = function () {
        return __awaiter(this, void 0, void 0, function () {
            var pathToFileDir, pathExists;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        pathToFileDir = path.dirname(this.pathToFile);
                        pathExists = function (pathToFile) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4 /*yield*/, fs.promises.stat(pathToFile).catch(function () { return false; })];
                                case 1: return [2 /*return*/, !!(_a.sent())];
                            }
                        }); }); };
                        return [4 /*yield*/, pathExists(pathToFileDir)];
                    case 1:
                        if (!!(_a.sent())) return [3 /*break*/, 3];
                        return [4 /*yield*/, fs.promises.mkdir(pathToFileDir, { recursive: true })];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3: return [4 /*yield*/, pathExists(this.pathToFile)];
                    case 4:
                        if (!!(_a.sent())) return [3 /*break*/, 6];
                        return [4 /*yield*/, fs.promises.writeFile(this.pathToFile, '[]')];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    FileDb.prototype.getDbItem = function (primaryKey) {
        return __awaiter(this, void 0, void 0, function () {
            var fileDataStr, users;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, fs.promises.readFile(this.pathToFile, 'utf8')];
                    case 1:
                        fileDataStr = _a.sent();
                        users = fileDataStr.length > 0 ? JSON.parse(fileDataStr) : [];
                        return [2 /*return*/, users.find(function (userItem) {
                                return userItem.id === primaryKey;
                            })];
                }
            });
        });
    };
    FileDb.prototype.loadData = function (userId, jovo) {
        return __awaiter(this, void 0, void 0, function () {
            var dbItem;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getDbItem(userId)];
                    case 1:
                        dbItem = _a.sent();
                        if (dbItem) {
                            jovo.$user.isNew = false;
                            jovo.setPersistableData(dbItem, this.config.storedElements);
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    FileDb.prototype.saveData = function (userId, jovo) {
        return __awaiter(this, void 0, void 0, function () {
            var fileDataStr, users, dbItem, item, i;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, fs.promises.readFile(this.pathToFile, 'utf8')];
                    case 1:
                        fileDataStr = _a.sent();
                        users = fileDataStr.length > 0 ? JSON.parse(fileDataStr) : [];
                        dbItem = users.find(function (userItem) {
                            return userItem.id === userId;
                        });
                        if (!!dbItem) return [3 /*break*/, 3];
                        item = {
                            id: userId,
                        };
                        return [4 /*yield*/, this.applyPersistableData(jovo, item)];
                    case 2:
                        _a.sent();
                        users.push(item);
                        return [3 /*break*/, 7];
                    case 3:
                        i = 0;
                        _a.label = 4;
                    case 4:
                        if (!(i < users.length)) return [3 /*break*/, 7];
                        if (!(users[i].id === userId)) return [3 /*break*/, 6];
                        return [4 /*yield*/, this.applyPersistableData(jovo, users[i])];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6:
                        i++;
                        return [3 /*break*/, 4];
                    case 7: return [2 /*return*/, fs.promises.writeFile(this.pathToFile, JSON.stringify(users, null, 2))];
                }
            });
        });
    };
    return FileDb;
}(DbPlugin));
export { FileDb };
//# sourceMappingURL=FileDb.js.map