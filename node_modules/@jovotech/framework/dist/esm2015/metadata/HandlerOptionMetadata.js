import { MetadataStorage } from './MetadataStorage';
import { MethodDecoratorMetadata } from './MethodDecoratorMetadata';
/**
 * Get values of the rest parameter of a decorator.
 * Useful for following case:
 * `@Intent(['foo', 'bar'])` in this case, the actual value in the intents-parameter is `[ ['foo', 'bar'] ]`, therefore we only need to return the inner array.
 */
export function getValuesOfDecoratorRestParameter(restParameter) {
    return restParameter.length && Array.isArray(restParameter[0])
        ? restParameter[0]
        : restParameter;
}
export function createHandlerOptionDecorator(options) {
    return function (target, propertyKey) {
        MetadataStorage.getInstance().addHandlerOptionMetadata(new HandlerOptionMetadata(target.constructor, propertyKey, options));
    };
}
export class HandlerOptionMetadata extends MethodDecoratorMetadata {
    constructor(
    // eslint-disable-next-line @typescript-eslint/ban-types
    target, propertyKey, options = {}) {
        super(target, propertyKey);
        this.target = target;
        this.propertyKey = propertyKey;
        this.options = options;
    }
}
//# sourceMappingURL=HandlerOptionMetadata.js.map