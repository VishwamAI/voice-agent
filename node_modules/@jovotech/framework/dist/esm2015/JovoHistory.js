import { JovoInput } from './index';
import { plainToClass } from 'class-transformer';
export class JovoHistory {
    constructor(platform, items = []) {
        this.items = items;
        this.platform = platform;
    }
    get prev() {
        return this.items.length > 0 ? this.items[0] : undefined;
    }
    getPersistableData() {
        return {
            items: this.items,
        };
    }
    setPersistableData(data) {
        this.items = (data === null || data === void 0 ? void 0 : data.items) || [];
        for (const item of this.items) {
            if (item.request) {
                item.request = plainToClass(this.platform.requestClass, item.request);
            }
            if (item.response) {
                item.response = plainToClass(this.platform.outputTemplateConverterStrategy.responseClass, item.response);
            }
            if (item.input) {
                item.input = plainToClass(JovoInput, item.input);
            }
        }
        return this;
    }
}
//# sourceMappingURL=JovoHistory.js.map