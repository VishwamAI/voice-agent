var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Platform } from '..';
import { TestDevice } from './TestDevice';
import { TestJovo } from './TestJovo';
import { TestOutputConverterStrategy } from './TestOutputConverterStrategy';
import { TestRequest } from './TestRequest';
import { TestRequestBuilder } from './TestRequestBuilder';
import { TestUser } from './TestUser';
var TestPlatform = /** @class */ (function (_super) {
    __extends(TestPlatform, _super);
    function TestPlatform() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.id = 'testplatform';
        _this.jovoClass = TestJovo;
        _this.requestClass = TestRequest;
        _this.outputTemplateConverterStrategy = new TestOutputConverterStrategy();
        _this.userClass = TestUser;
        _this.requestBuilder = TestRequestBuilder;
        _this.deviceClass = TestDevice;
        return _this;
    }
    TestPlatform.prototype.isRequestRelated = function (request) {
        return request.isTestRequest;
    };
    TestPlatform.prototype.finalizeResponse = function (response) {
        return response;
    };
    TestPlatform.prototype.isResponseRelated = function () {
        return true;
    };
    TestPlatform.prototype.getDefaultConfig = function () {
        return {};
    };
    return TestPlatform;
}(Platform));
export { TestPlatform };
//# sourceMappingURL=TestPlatform.js.map