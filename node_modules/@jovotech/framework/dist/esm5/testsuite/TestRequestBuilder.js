var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import _merge from 'lodash.merge';
import { RequestBuilder } from '..';
import { TestRequest } from './TestRequest';
var TestRequestBuilder = /** @class */ (function (_super) {
    __extends(TestRequestBuilder, _super);
    function TestRequestBuilder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TestRequestBuilder.prototype.launch = function (json) {
        var request = new TestRequest();
        return _merge(request, json);
    };
    TestRequestBuilder.prototype.intent = function (nameOrJson) {
        var request = new TestRequest();
        request.session.isNew = false;
        if (typeof nameOrJson !== 'undefined') {
            if (typeof nameOrJson === 'object') {
                return _merge(request, nameOrJson);
            }
            else {
                request.setIntent(nameOrJson);
            }
        }
        return request;
    };
    return TestRequestBuilder;
}(RequestBuilder));
export { TestRequestBuilder };
//# sourceMappingURL=TestRequestBuilder.js.map