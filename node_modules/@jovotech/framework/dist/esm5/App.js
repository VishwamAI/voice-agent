var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
import _merge from 'lodash.merge';
import { ComponentTree, isSameProvide, Jovo, Logger, Plugin, } from '.';
import { MatchingPlatformNotFoundError } from './errors/MatchingPlatformNotFoundError';
import { Extensible } from './Extensible';
import { HandleRequest } from './HandleRequest';
import { I18Next } from './I18Next';
import { MiddlewareCollection } from './MiddlewareCollection';
import { Platform } from './Platform';
import { BasicLogging } from './plugins/BasicLogging';
import { HandlerPlugin } from './plugins/HandlerPlugin';
import { OutputPlugin } from './plugins/OutputPlugin';
import { RouterPlugin } from './plugins/RouterPlugin';
export var APP_MIDDLEWARES = [
    'request.start',
    'request',
    'request.end',
    'interpretation.start',
    'interpretation.asr',
    'interpretation.nlu',
    'interpretation.end',
    'dialogue.start',
    'dialogue.router',
    'dialogue.logic',
    'dialogue.end',
    'response.start',
    'response.output',
    'response.tts',
    'response.end',
];
var App = /** @class */ (function (_super) {
    __extends(App, _super);
    function App(config) {
        var _this = _super.call(this, config ? __assign(__assign({}, config), { components: undefined, providers: undefined }) : config) || this;
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        _this.systemProviders = [];
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        _this.providers = [];
        _this.initialized = false;
        _this.errorListeners = [];
        // @see https://www.jovo.tech/docs/data#app-data
        _this.data = {};
        // @see https://www.jovo.tech/docs/cms
        _this.cms = {};
        if (typeof _this.config.logging === 'object' && _this.config.logging.logger) {
            _merge(Logger.config, _this.config.logging.logger);
        }
        _this.onError(function (error) {
            Logger.error(error);
        });
        _this.use(new RouterPlugin(), new HandlerPlugin(), new OutputPlugin());
        _this.componentTree = new (ComponentTree.bind.apply(ComponentTree, __spreadArray([void 0], ((config === null || config === void 0 ? void 0 : config.components) || []), false)))();
        _this.i18n = new I18Next(_this.config.i18n);
        _this.providers = (config === null || config === void 0 ? void 0 : config.providers) || [];
        _this.systemProviders = [
            {
                provide: Jovo,
                useFactory: function (jovo) { return jovo; },
            },
        ];
        return _this;
    }
    Object.defineProperty(App.prototype, "isInitialized", {
        get: function () {
            return this.initialized;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(App.prototype, "platforms", {
        get: function () {
            return Object.values(this.plugins).filter(function (plugin) { return plugin instanceof Platform; });
        },
        enumerable: false,
        configurable: true
    });
    App.prototype.configure = function (config) {
        var _a;
        _merge(this.config, __assign(__assign({}, config), { components: undefined, plugins: undefined }));
        var usables = __spreadArray(__spreadArray([], ((config === null || config === void 0 ? void 0 : config.plugins) || []), true), ((config === null || config === void 0 ? void 0 : config.components) || []), true);
        this.use.apply(this, usables);
        if (config.providers) {
            var mergedProviders = __spreadArray([], config.providers, true);
            var _loop_1 = function (provider) {
                if (!mergedProviders.find(function (p) { return isSameProvide(p, provider); })) {
                    mergedProviders.push(provider);
                }
            };
            for (var _i = 0, _b = this.providers; _i < _b.length; _i++) {
                var provider = _b[_i];
                _loop_1(provider);
            }
            this.providers.length = 0;
            (_a = this.providers).push.apply(_a, mergedProviders);
        }
    };
    App.prototype.onError = function (listener) {
        if (this.errorListeners.includes(listener)) {
            return;
        }
        this.errorListeners.push(listener);
    };
    App.prototype.addErrorListener = function (listener) {
        return this.onError(listener);
    };
    App.prototype.removeErrorListener = function (listener) {
        var index = this.errorListeners.indexOf(listener);
        if (index >= 0) {
            this.errorListeners.splice(index, 1);
        }
    };
    App.prototype.initializeMiddlewareCollection = function () {
        return new (MiddlewareCollection.bind.apply(MiddlewareCollection, __spreadArray([void 0], APP_MIDDLEWARES, false)))();
    };
    App.prototype.middleware = function (name) {
        return this.middlewareCollection.get(name);
    };
    App.prototype.hook = function (name, fn) {
        this.middlewareCollection.use(name, fn);
    };
    App.prototype.getDefaultConfig = function () {
        return {
            logging: true,
        };
    };
    App.prototype.initialize = function () {
        return __awaiter(this, void 0, void 0, function () {
            var e_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (this.initialized) {
                            return [2 /*return*/];
                        }
                        if (typeof this.config.logging === 'boolean' && this.config.logging) {
                            this.use(new BasicLogging({ request: true, response: true }));
                        }
                        else if (typeof this.config.logging === 'object') {
                            if (this.config.logging.logger) {
                                _merge(Logger.config, this.config.logging.logger);
                            }
                            this.use(new BasicLogging(this.config.logging));
                        }
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 5, , 6]);
                        return [4 /*yield*/, this.componentTree.initialize()];
                    case 2:
                        _a.sent();
                        return [4 /*yield*/, this.i18n.initialize()];
                    case 3:
                        _a.sent();
                        return [4 /*yield*/, this.initializePlugins()];
                    case 4:
                        _a.sent();
                        this.initialized = true;
                        return [3 /*break*/, 6];
                    case 5:
                        e_1 = _a.sent();
                        return [2 /*return*/, this.handleError(e_1)];
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    App.prototype.use = function () {
        var _a;
        var usables = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            usables[_i] = arguments[_i];
        }
        var plugins = usables.filter(function (usable) {
            if (!(usable instanceof Plugin)) {
                return false;
            }
            if ((process.env.NODE_ENV === 'test' || process.env.JEST_WORKER_ID) &&
                usable.config.skipTests) {
                return false;
            }
            return true;
        });
        if (plugins.length) {
            _super.prototype.use.apply(this, plugins);
        }
        var components = usables.filter(function (usable) { return !(usable instanceof Plugin); });
        if (components.length) {
            (_a = this.componentTree).add.apply(_a, components);
        }
        return this;
    };
    App.prototype.handle = function (server) {
        return __awaiter(this, void 0, void 0, function () {
            var handleRequest, relatedPlatform, jovo, e_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 5, , 7]);
                        handleRequest = new HandleRequest(this, server);
                        return [4 /*yield*/, handleRequest.mount()];
                    case 1:
                        _a.sent();
                        relatedPlatform = handleRequest.platforms.find(function (platform) {
                            return platform.isRequestRelated(server.getRequestObject());
                        });
                        if (!relatedPlatform) {
                            throw new MatchingPlatformNotFoundError(server.getRequestObject());
                        }
                        handleRequest.platform = relatedPlatform;
                        jovo = relatedPlatform.createJovoInstance(this, handleRequest);
                        // RIDR-pipeline
                        return [4 /*yield*/, handleRequest.middlewareCollection.run(APP_MIDDLEWARES.slice(), jovo)];
                    case 2:
                        // RIDR-pipeline
                        _a.sent();
                        return [4 /*yield*/, handleRequest.dismount()];
                    case 3:
                        _a.sent();
                        // TODO determine what to do if there is not response
                        if (!jovo.$response) {
                            return [2 /*return*/];
                        }
                        // use handleRequest.server instead of server in order to allow a request-related server instance to be used
                        return [4 /*yield*/, handleRequest.server.setResponse(jovo.$response)];
                    case 4:
                        // use handleRequest.server instead of server in order to allow a request-related server instance to be used
                        _a.sent();
                        return [3 /*break*/, 7];
                    case 5:
                        e_2 = _a.sent();
                        return [4 /*yield*/, this.handleError(e_2)];
                    case 6:
                        _a.sent();
                        return [2 /*return*/, server.fail(e_2)];
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    App.prototype.handleError = function (error, jovo) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var errorInstance, _i, _b, listener;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        errorInstance = error instanceof Error ? error : new Error(error);
                        if (!((_a = this.errorListeners) === null || _a === void 0 ? void 0 : _a.length)) {
                            throw error;
                        }
                        _i = 0, _b = this.errorListeners;
                        _c.label = 1;
                    case 1:
                        if (!(_i < _b.length)) return [3 /*break*/, 4];
                        listener = _b[_i];
                        return [4 /*yield*/, listener(errorInstance, jovo)];
                    case 2:
                        _c.sent();
                        _c.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    return App;
}(Extensible));
export { App };
//# sourceMappingURL=App.js.map