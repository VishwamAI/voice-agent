import { EventEmitter, flags, JovoCli, PluginCommand, CliFlags, CliArgs, PluginContext } from '@jovotech/cli-core';
import DeployCommand from '..';
export declare type DeployPlatformEvents = 'before.deploy:platform' | 'deploy:platform' | 'after.deploy:platform';
export interface DeployPlatformContext extends PluginContext {
    args: CliArgs<typeof DeployPlatform>;
    flags: CliFlags<typeof DeployPlatform>;
    platforms: string[];
    locales: string[];
}
export declare class DeployPlatform extends PluginCommand<DeployPlatformEvents> {
    static id: string;
    static description: string;
    static examples: string[];
    static availablePlatforms: string[];
    static flags: {
        stage: flags.IOptionFlag<string | undefined>;
        debug: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        locale: flags.IOptionFlag<string[]>;
    };
    static args: {
        readonly name: "platform";
        readonly description: "Specify the platform to be deployed to";
        readonly multiple: true;
        readonly options: string[];
    }[];
    static strict: boolean;
    $context: DeployPlatformContext;
    static install(cli: JovoCli, plugin: DeployCommand, emitter: EventEmitter<DeployPlatformEvents>): void;
    install(): void;
    checkForPlatformsFolder(): void;
    run(): Promise<void>;
}
