import { CliArgs, CliFlags, EventEmitter, flags, JovoCli, PluginCommand, PluginContext } from '@jovotech/cli-core';
import DeployCommand from '..';
export interface DeployCodeContext extends PluginContext {
    args: CliArgs<typeof DeployCode>;
    flags: CliFlags<typeof DeployCode>;
    target: string[];
    src?: string;
}
export declare type DeployCodeEvents = 'before.deploy:code' | 'deploy:code' | 'after.deploy:code';
export declare class DeployCode extends PluginCommand<DeployCodeEvents> {
    static id: string;
    static description: string;
    static examples: string[];
    static availableTargets: string[];
    static flags: {
        stage: flags.IOptionFlag<string | undefined>;
        debug: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        src: flags.IOptionFlag<string | undefined>;
    };
    static args: {
        readonly name: "target";
        readonly required: true;
        readonly description: "Specify the cloud provider to be deployed to";
        readonly multiple: true;
        readonly options: string[];
    }[];
    static strict: boolean;
    $context: DeployCodeContext;
    static install(cli: JovoCli, plugin: DeployCommand, emitter: EventEmitter<DeployCodeEvents>): void;
    run(): Promise<void>;
}
