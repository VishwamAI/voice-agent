"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DialogDeclaration = exports.isDialogDeclaration = void 0;
const guard_1 = require("./guard");
const tree_1 = require("./tree");
exports.isDialogDeclaration = (0, guard_1.guard)("DialogDeclaration");
/**
 * Declare a Dialog.
 */
class DialogDeclaration extends tree_1.Tree {
    constructor(
    /**
     * Name of the Dialog Declaration.
     */
    name, 
    /**
     * Parameters to the dialog.
     */
    args, 
    /**
     * List of samples defined in the dialog.
     */
    samples, 
    /**
     * Return type for dialog.
     */
    returnType, 
    /**
     * Type parameters.
     */
    genericArguments, 
    /**
     * Annotations attached to this Dialog Declaration.
     */
    annotations, loc) {
        super("DialogDeclaration", loc);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: name
        });
        Object.defineProperty(this, "samples", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: samples
        });
        Object.defineProperty(this, "returnType", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: returnType
        });
        Object.defineProperty(this, "genericArguments", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: genericArguments
        });
        Object.defineProperty(this, "annotations", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: annotations
        });
        /**
         * Parameters to the dialog.
         */
        Object.defineProperty(this, "arguments", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.arguments = args;
        this.setAsParentOn(name);
        this.setAsParentOn(args);
        this.setAsParentOn(samples);
        this.setAsParentOn(returnType);
        this.setAsParentOn(genericArguments);
        this.setAsParentOn(annotations);
    }
    clone() {
        var _a, _b, _c, _d, _e, _f;
        return new DialogDeclaration((_a = this.name) === null || _a === void 0 ? void 0 : _a.clone(), (_b = this.arguments) === null || _b === void 0 ? void 0 : _b.map((a) => a.clone()), (_c = this.samples) === null || _c === void 0 ? void 0 : _c.map((s) => s.clone()), (_d = this.returnType) === null || _d === void 0 ? void 0 : _d.clone(), (_e = this.genericArguments) === null || _e === void 0 ? void 0 : _e.map((a) => a.clone()), (_f = this.annotations) === null || _f === void 0 ? void 0 : _f.map((a) => a.clone()), this.loc);
    }
}
exports.DialogDeclaration = DialogDeclaration;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2FzdC9kaWFsb2cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsbUNBQThCO0FBRzlCLGlDQUE0QjtBQU1mLFFBQUEsbUJBQW1CLEdBQUcsSUFBQSxhQUFLLEVBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUU5RDs7R0FFRztBQUNILE1BQWEsaUJBQWtCLFNBQVEsV0FBaUM7SUFNdEU7SUFDRTs7T0FFRztJQUNNLElBQVc7SUFDcEI7O09BRUc7SUFDSCxJQUE0QjtJQUM1Qjs7T0FFRztJQUNNLE9BQWtCO0lBQzNCOztPQUVHO0lBQ00sVUFBMEI7SUFDbkM7O09BRUc7SUFDTSxnQkFBa0M7SUFDM0M7O09BRUc7SUFDTSxXQUEwQixFQUNuQyxHQUFvQjtRQUVwQixLQUFLLENBQUMsbUJBQW1CLEVBQUUsR0FBRyxDQUFDLENBQUM7Ozs7O21CQXZCdkI7Ozs7OzttQkFRQTs7Ozs7O21CQUlBOzs7Ozs7bUJBSUE7Ozs7OzttQkFJQTs7UUE3Qlg7O1dBRUc7UUFDSDs7Ozs7V0FBMkM7UUE4QnpDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QixJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDL0IsSUFBSSxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVNLEtBQUs7O1FBQ1YsT0FBTyxJQUFJLGlCQUFpQixDQUMxQixNQUFBLElBQUksQ0FBQyxJQUFJLDBDQUFFLEtBQUssRUFBRSxFQUNsQixNQUFBLElBQUksQ0FBQyxTQUFTLDBDQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQ3JDLE1BQUEsSUFBSSxDQUFDLE9BQU8sMENBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsRUFDbkMsTUFBQSxJQUFJLENBQUMsVUFBVSwwQ0FBRSxLQUFLLEVBQUUsRUFDeEIsTUFBQSxJQUFJLENBQUMsZ0JBQWdCLDBDQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQzVDLE1BQUEsSUFBSSxDQUFDLFdBQVcsMENBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsRUFDdkMsSUFBSSxDQUFDLEdBQUcsQ0FDRCxDQUFDO0lBQ1osQ0FBQztDQUNGO0FBdERELDhDQXNEQyJ9